{"remainingRequest":"/Users/ricardoleitejr/Desktop/BYU/Fall-2020/CS 260/Creative Project 4/Creative/Creative-4/frontend/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ricardoleitejr/Desktop/BYU/Fall-2020/CS 260/Creative Project 4/Creative/Creative-4/frontend/client/src/components/ChatRoom.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/ricardoleitejr/Desktop/BYU/Fall-2020/CS 260/Creative Project 4/Creative/Creative-4/frontend/client/src/components/ChatRoom.vue","mtime":1607049157573},{"path":"/Users/ricardoleitejr/Desktop/BYU/Fall-2020/CS 260/Creative Project 4/Creative/Creative-4/frontend/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ricardoleitejr/Desktop/BYU/Fall-2020/CS 260/Creative Project 4/Creative/Creative-4/frontend/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ricardoleitejr/Desktop/BYU/Fall-2020/CS 260/Creative Project 4/Creative/Creative-4/frontend/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ricardoleitejr/Desktop/BYU/Fall-2020/CS 260/Creative Project 4/Creative/Creative-4/frontend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ricardoleitejr/Desktop/BYU/Fall-2020/CS 260/Creative Project 4/Creative/Creative-4/frontend/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNoYXQgLmxlZnQgLmNoYXQtYm9keSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBtYXJnaW4tbGVmdDogMTAwcHg7Cn0KCi5jaGF0IC5yaWdodCAuY2hhdC1ib2R5IHsKICB0ZXh0LWFsaWduOiByaWdodDsKICBtYXJnaW4tcmlnaHQ6IDEwMHB4Owp9CgouY2hhdCAuY2hhdC1ib2R5IHAgewogIG1hcmdpbjogMDsKICBjb2xvcjogIzc3Nzc3NzsKfQoKLnBhbmVsLWJvZHkgewogIG92ZXJmbG93LXk6IHNjcm9sbDsKICBoZWlnaHQ6IDM1MHB4Owp9CgouY2hhdC1mb3JtIHsKICBtYXJnaW46IDIwcHggYXV0bzsKICB3aWR0aDogODAlOwp9Cg=="},{"version":3,"sources":["ChatRoom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ChatRoom.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <b-row>\n    <b-col cols=\"12\">\n      <h2>\n        Chat Room\n      </h2>\n      <b-list-group class=\"panel-body\" v-chat-scroll>\n        <b-list-group-item\n          v-for=\"item in chats\"\n          class=\"chat\"\n          v-bind:key=\"item.id\"\n        >\n          <div class=\"left clearfix\" v-if=\"item.nickname === nickname\">\n            <b-img\n              left\n              src=\"http://placehold.it/50/55C1E7/fff&text=ME\"\n              rounded=\"circle\"\n              width=\"75\"\n              height=\"75\"\n              alt=\"img\"\n              class=\"m-1\"\n            />\n            <div class=\"chat-body clearfix\">\n              <div class=\"header\">\n                <strong class=\"primary-font\">{{ item.nickname }}</strong>\n                <small class=\"pull-right text-muted\">\n                  <span class=\"glyphicon glyphicon-time\"></span\n                  >{{ item.created_date }}</small\n                >\n              </div>\n              <p>{{ item.message }}</p>\n            </div>\n          </div>\n          <div class=\"right clearfix\" v-else>\n            <b-img\n              right\n              src=\"http://placehold.it/50/55C1E7/fff&text=U\"\n              rounded=\"circle\"\n              width=\"75\"\n              height=\"75\"\n              alt=\"img\"\n              class=\"m-1\"\n            />\n            <div class=\"chat-body clearfix\">\n              <div class=\"header\">\n                <strong class=\"primary-font\">{{ item.nickname }}</strong>\n                <small class=\"pull-right text-muted\">\n                  <span class=\"glyphicon glyphicon-time\"></span\n                  >{{ item.created_date }}</small\n                >\n              </div>\n              <p>{{ item.message }}</p>\n            </div>\n          </div>\n        </b-list-group-item>\n      </b-list-group>\n      <ul v-if=\"errors && errors.length\"></ul>\n      <b-form @submit=\"onSubmit\" class=\"chat-form\">\n        <b-input-group prepend=\"Message\">\n          <b-form-input\n            id=\"message\"\n            :state=\"state\"\n            v-model.trim=\"chat.message\"\n          ></b-form-input>\n          <b-input-group-append>\n            <b-btn type=\"submit\" variant=\"info\">Send</b-btn>\n          </b-input-group-append>\n        </b-input-group>\n      </b-form>\n    </b-col>\n  </b-row>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Vue from \"vue\";\nimport * as io from \"socket.io-client\";\nimport VueChatScroll from \"vue-chat-scroll\";\nVue.use(VueChatScroll);\n\nexport default {\n  name: \"ChatRoom\",\n  data() {\n    return {\n      chats: [],\n      errors: [],\n      nickname: this.$route.params.nickname,\n      chat: {},\n      socket: io(\"http://localhost:4000\")\n    };\n  },\n  created() {\n    axios\n      .get(`http://localhost:3000/api/chat/` + this.$route.params.id)\n      .then(response => {\n        this.chats = response.data;\n      })\n      .catch(e => {\n        this.errors.push(e);\n      });\n\n    this.socket.on(\n      \"new-message\",\n      function(data) {\n        if (data.message.room === this.$route.params.id) {\n          this.chats.push(data.message);\n        }\n      }.bind(this)\n    );\n  },\n  methods: {\n    logout() {\n      this.socket.emit(\"save-message\", {\n        room: this.chat.room,\n        nickname: this.chat.nickname,\n        message: this.chat.nickname + \" left this room\",\n        created_date: new Date()\n      });\n      this.$router.push({\n        name: \"RoomList\"\n      });\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      this.chat.room = this.$route.params.id;\n      this.chat.nickname = this.$route.params.nickname;\n      axios\n        .post(`http://localhost:3000/api/chat`, this.chat)\n        .then(response => {\n          this.socket.emit(\"save-message\", response.data);\n          this.chat.message = \"\";\n        })\n        .catch(e => {\n          this.errors.push(e);\n        });\n    }\n  }\n};\n</script>\n\n<style>\n.chat .left .chat-body {\n  text-align: left;\n  margin-left: 100px;\n}\n\n.chat .right .chat-body {\n  text-align: right;\n  margin-right: 100px;\n}\n\n.chat .chat-body p {\n  margin: 0;\n  color: #777777;\n}\n\n.panel-body {\n  overflow-y: scroll;\n  height: 350px;\n}\n\n.chat-form {\n  margin: 20px auto;\n  width: 80%;\n}\n</style>\n"]}]}